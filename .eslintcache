[{"/home/owner/dojo/js/hook/hookform/src/reportWebVitals.js":"1","/home/owner/dojo/js/hook/hookform/src/App.js":"2","/home/owner/dojo/js/hook/hookform/src/components/Form.js":"3","/home/owner/dojo/js/hook/hookform/src/App.test.js":"4","/home/owner/dojo/js/hook/hookform/src/components/Results.js":"5","/home/owner/dojo/js/hook/hookform/src/index.js":"6"},{"size":362,"mtime":1610076956908,"results":"7","hashOfConfig":"8"},{"size":453,"mtime":1610136813329,"results":"9","hashOfConfig":"8"},{"size":1692,"mtime":1610137988872,"results":"10","hashOfConfig":"8"},{"size":246,"mtime":1610076956908,"results":"11","hashOfConfig":"8"},{"size":400,"mtime":1610082814790,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1610076956908,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w0gkao",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/owner/dojo/js/hook/hookform/src/reportWebVitals.js",[],"/home/owner/dojo/js/hook/hookform/src/App.js",[],"/home/owner/dojo/js/hook/hookform/src/components/Form.js",["28"],"import React, { useState } from 'react';\nconst Form = (props) => {\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword]= useState(\"\");\n    const [confirmPass, setConfirmPass] = useState(\"\");\n    const [firstnameErr, seFirstnameErr] = \nconst createUser = (e) => {\n    const{input, setInputs} = props;\n    setInputs({\n        ...input ,\n        [e.target.name]: e.target.value\n    });\n};\nconst validator = ()=>{\n    if(firstname\n}\n\nreturn(\n    \n    <form onChange ={ createUser }>\n        <div>\n            <label htmlFor= \"firstname\"> First Name:</label>\n            <input onChange ={ createUser } type=\"text\" name=\"firstname\" onChange={(e)=> setFirstname(e.target.value)}/>\n        </div>\n        <div>\n            <label htmlfor=\"lastname\"> Last Name:</label>\n            <input onChange ={ createUser } type=\"text\" name=\"lastname\" onChange={(e)=> setLastname(e.target.value)}/>\n        </div>\n        <div>\n            <label htmlfor = \"email\"> Email:</label>\n            <input onChange ={ createUser } type=\"text\" name=\"email\" onChange={(e)=> setEmail(e.target.value)}/>\n        </div>\n        <div>\n            <label htmlfor=\"password\"> Password: </label>\n            <input onChange ={ createUser } type=\"text\" name=\" paswword\" onChange={(e)=> setPassword(e.target.value)}/>\n        </div>\n        <div>\n            <label htmlfor=\"confirmPass\"> ConfrimPass:</label>\n            <input onChange ={ createUser } type=\"text\" name=\"confrimPass\" onChange={(e)=> setConfirmPass(e.target.value)}/>\n        </div>\n        \n    </form>\n\n);\n\n};\nexport default Form;\n","/home/owner/dojo/js/hook/hookform/src/App.test.js",[],"/home/owner/dojo/js/hook/hookform/src/components/Results.js",["29","30"],"import React, { useState } from 'react';\n\nconst Results = (props) => {\n    const {firstname, lastname, email, password} = props.data;\n    return(\n        <div>\n            <p>First Name: {firstname}</p>\n            <p>Last Name: {lastname}</p>\n            <p>Email: {email}</p>\n            <p>password: password</p>\n            <p>confirm: password</p>\n\n        </div>\n    );\n}\nexport default Results","/home/owner/dojo/js/hook/hookform/src/index.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"31","line":9,"column":1},{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":25},{"ruleId":"32","severity":1,"message":"36","line":4,"column":40,"nodeType":"34","messageId":"35","endLine":4,"endColumn":48},"Parsing error: Unexpected token\n\n   7 |     const [confirmPass, setConfirmPass] = useState(\"\");\n   8 |     const [firstnameErr, seFirstnameErr] = \n>  9 | const createUser = (e) => {\n     | ^\n  10 |     const{input, setInputs} = props;\n  11 |     setInputs({\n  12 |         ...input ,","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'password' is assigned a value but never used."]